# Nom de notre workflow, visible sur GitHub
name: Dragon CI

# Déclencheurs : quand ce workflow doit-il s'exécuter ?
on:
  push:
    branches: [ "main" ] # À chaque push sur la branche main
  pull_request:
    branches: [ "main" ] # À chaque demande de fusion vers main

# Jobs : la liste des tâches à accomplir
jobs:
  # Nous n'avons qu'un seul job pour l'instant, que nous appelons "build"
  build:
    # Le type de machine virtuelle sur laquelle exécuter le job
    runs-on: ubuntu-latest

    # Les étapes (steps) qui composent le job
    steps:
      # Étape 1 : Récupérer notre code depuis GitHub
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json' # On ajoute cette ligne       # On met en cache les dépendances pour accélérer les futurs builds

      # Étape 3 : Installer les dépendances de la racine et des sous-projets
      - name: Install dependencies
        run: |
          npm install
          npm install --prefix packages/registry
          # npm install --prefix packages/cli  # On laisse cette ligne commentée pour l'instant

      # Étape 4 (Optionnel) : Lancer une commande de vérification de base
      # Plus tard, nous remplacerons ceci par de vrais tests (npm test)
      - name: Build and Lint (Placeholder)
        run: |
          echo "Build step placeholder. Future tests will go here."
          # Exemple de ce qu'on pourrait faire :
          # npm run build --if-present
          # npm run lint --if-present
